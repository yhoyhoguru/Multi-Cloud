#######################
Day 3 : 19th July 2025
#######################	

		
	- EC2 Services!
	
		EC2 - Elastic Compute Cloud Instance ==> Virtual Machine 
		
		
		
		
	
	- Storage :
	
		- EBS 
		
		- EFS
		
		- S3

	- EC2 Service :::
	
		EC2 - Elastic Compute Cloud Instance ==> Virtual Machine 
		
	
	- Access EC2 Instances!
	
	
		- Login to AWS Console 
		
		- Create EC2 Instance --> Linux - Ubuntu AMI v22.04 - Enabled with port 22.
		
		- Connect to EC2 Instance :
		
			- EC2 Instance Connect 			# Using Web Browser 
			
			- Using SSH Agents :			# Windows User  
			
				- MobaXterm 				# https://mobaxterm.mobatek.net/download-home-edition.html
				- Putty 
	
			- Terminals :					# CMD Prompt/gitbash/Linux Teminal/Mac Terminal
			
					Open Terminal

					Locate your private key file. The key used to launch this instance is aws2025-keypair1.pem

					Run this command, if necessary, to ensure your key is not publicly viewable.
					chmod 400 "aws2025-keypair1.pem"

					Connect to your instance using its Public DNS:
					ec2-13-235-75-90.ap-south-1.compute.amazonaws.com
					
					ssh -i "aws2025-keypair1.pem" ec2-user@ec2-13-235-75-90.ap-south-1.compute.amazonaws.com

			
		
			SSH Connection to Remote Server :
			
				- Host Name 		# Public IP Address of EC2 Instance 
				
				- User Name			# Default User_Name : Ubuntu : ubuntu / Amazon Linux2 : ec2-user 
				
				- User Credentials 	# 
				
					Private Key ==> *.pem
		
		
		Production Envionments :
		
			- Prod Servers 
			
				--> 1,2,3,4,5		==> Elastic IP 
				
				==> www.loksai.com ==> IP Address
				
				==> Load Balancers ==> 1 - IP => 
				
						1,2,3,4,5		==> Elastic IP 
						
					Kubernetes!
						
						
	- Storage :
	
		- EBS Volumes ::: 
		
			Jenkins Servers (VM) == Periodic back-up of this server Volume ==> Snapshot. Template of EBS Volume 
			
			Build Servers 
			
			Kubernetes Cluster 
		
		Storage Administrator!
			
		
		
		- EFS :
		
			- Multi-AZs
		
		
		- AMI ==> Amazon Machine Image!	Template of the EC2 Instance 
		
			- OS,Instance Type, 
		
		
		
		- Create a VM using default AMI 		
		
		- Install all the required tools/packages in that VM
		
		- Create a New AMI using this VM 
		
		- New AMI is ready 
		
		
		-> Build Server/Environment used to build the Applications 
		
		
			Within a region :
			
			--> VM1 -> Install all the required build tools 
						-> git,maven,gradle,jdk,docker,sonarqube,
						
			--> VM2 -> Install all the required build tools 
		               -> git,.Net-SDK,docker,sonarqube,
					   
					   
			Create a AMI based on VM1 
					   
			Create a AMI based on VM2 
		
		
			- Workflow :
			
				Test the VM created using custom AMI 
				
				
			EBS Volume Encryption :
			
				Security --> 
				
					AWS - KMS
					
					During Snapshot!
					
					Encryption creates some latency!
		
Next :::		
		- S3 :::
				


#######################
Day 3 : 19th July 2025
#######################	

		
	- EC2 Services!
	
		EC2 - Elastic Compute Cloud Instance ==> Virtual Machine 
		
		
		
		
	
	- Storage :
	
		- EBS 
		
		- EFS
		
		- S3

	- EC2 Service :::
	
		EC2 - Elastic Compute Cloud Instance ==> Virtual Machine 
		
	
	- Access EC2 Instances!
	
	
		- Login to AWS Console 
		
		- Create EC2 Instance --> Linux - Ubuntu AMI v22.04 - Enabled with port 22.
		
		- Connect to EC2 Instance :
		
			- EC2 Instance Connect 			# Using Web Browser 
			
			- Using SSH Agents :			# Windows User  
			
				- MobaXterm 				# https://mobaxterm.mobatek.net/download-home-edition.html
				- Putty 
	
			- Terminals :					# CMD Prompt/gitbash/Linux Teminal/Mac Terminal
			
					Open Terminal

					Locate your private key file. The key used to launch this instance is aws2025-keypair1.pem

					Run this command, if necessary, to ensure your key is not publicly viewable.
					chmod 400 "aws2025-keypair1.pem"

					Connect to your instance using its Public DNS:
					ec2-13-235-75-90.ap-south-1.compute.amazonaws.com
					
					ssh -i "aws2025-keypair1.pem" ec2-user@ec2-13-235-75-90.ap-south-1.compute.amazonaws.com

			
		
			SSH Connection to Remote Server :
			
				- Host Name 		# Public IP Address of EC2 Instance 
				
				- User Name			# Default User_Name : Ubuntu : ubuntu / Amazon Linux2 : ec2-user 
				
				- User Credentials 	# 
				
					Private Key ==> *.pem
		
		
		Production Envionments :
		
			- Prod Servers 
			
				--> 1,2,3,4,5		==> Elastic IP 
				
				==> www.loksai.com ==> IP Address
				
				==> Load Balancers ==> 1 - IP => 
				
						1,2,3,4,5		==> Elastic IP 
						
					Kubernetes!
						
						
	- Storage :
	
		- EBS Volumes ::: 
		
			Jenkins Servers (VM) == Periodic back-up of this server Volume ==> Snapshot. Template of EBS Volume 
			
			Build Servers 
			
			Kubernetes Cluster 
		
		Storage Administrator!
			
		
		
		- EFS :
		
			- Multi-AZs
		
		
		- AMI ==> Amazon Machine Image!	Template of the EC2 Instance 
		
			- OS,Instance Type, 
		
		
		
		- Create a VM using default AMI 		
		
		- Install all the required tools/packages in that VM
		
		- Create a New AMI using this VM 
		
		- New AMI is ready 
		
		
		-> Build Server/Environment used to build the Applications 
		
		
			Within a region :
			
			--> VM1 -> Install all the required build tools 
						-> git,maven,gradle,jdk,docker,sonarqube,
						
			--> VM2 -> Install all the required build tools 
		               -> git,.Net-SDK,docker,sonarqube,
					   
					   
			Create a AMI based on VM1 
					   
			Create a AMI based on VM2 
		
		
			- Workflow :
			
				Test the VM created using custom AMI 
				
				
			EBS Volume Encryption :
			
				Security --> 
				
					AWS - KMS
					
					During Snapshot!
					
					Encryption creates some latency!
		

	
